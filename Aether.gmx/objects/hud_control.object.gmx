<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Init buttons
for(i = 0; i &lt; 1; i++) {
    button[i] = "";
    buttonX[i] = view_wview-96;
    buttonY[i] = view_hview-96;
    overButton[i] = false;
}

button[0] = "Set Work Area";
selectingArea = false;
selected = false;
x1 = 0;
y1 = 0;
x2 = 0;
y2 = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HUD Settings and Location
x += (mouse_x - x) * .25;
y += (mouse_y - y) * .25;
view_object = self;
view_hborder = 60;
view_vborder = view_hborder;


if(SELECTED_VILLAGER != -1) {
    selected = true;
} else selected = false;

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Update button status
for(i = 0; i &lt; array_length_1d(button);i++) {
    var xx = abs(-view_xview[0] + mouse_x - buttonX[i]-32);
    var yy = abs(-view_yview[0] + mouse_y - buttonY[i]-32);
    overButton[i] = (xx &lt; 32 &amp;&amp; yy &lt; 32);
    if(overButton[i]) {
        if(mouse_check_button_released(mb_right)) {
            switch(button[i]) {
                case "Set Work Area":
                    selectingArea = true;
                break;
            }
        }
    }
}
if(selectingArea) {
    if(mouse_check_button_pressed(mb_right)) {
        SELECTED_VILLAGER.workArea[0] = mouse_x;
        SELECTED_VILLAGER.workArea[1] = mouse_y;
        selectingArea = false;
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw HUD Backdrop

var margin = 16;
//Draw Global Inventory HUD

x1 = view_xview+(view_wview-300);
y1 = view_yview;
x2 = x1+300;
y2 = view_yview+view_hview-200-selected*200;

drawHud(x1,y1,x2,y2,margin,.6);
//If there is a selected villager, draw villager inventory
if(selected) drawHud(x1,y2,x2,y2+selected*200,margin,.6);

//Draw HUD object
draw_rectangle(x-2,y-2,x+2,y+2,1);

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Resources
for(var b = 0; b &lt; array_height_2d(global.storage); b++) {
    for (var c = 0; c &lt; array_length_2d(global.storage, b); c++) {
        item[b, c] = global.storage[b,c];
    }
}

//Draw Resource Sprite and Quantity
for(i = 0; i &lt; array_height_2d(item); i++) {
    var buffer = 24;
    var xpos, ypos;
    xpos = x1+i*40+32;
    ypos = y1+buffer;
    draw_sprite(resSet,i,xpos,ypos);
    
    //Measure Total 
    var b, total = 0;
    draw_set_color(c_black);
    for(b = 0; b &lt; array_length_2d(item,i);b++) {
       total += item[i, b];
    }
    draw_text(xpos, ypos, total);
    var xx, yy;
    xx = xpos+16;
    yy = ypos+16;
    over_res[i] = (abs(mouse_x - xx) &lt; 16 &amp;&amp; abs(mouse_y - yy &lt; 16));
    if(over_res[i]) {
        draw_rectangle(xx-16,yy-16,xx+16,yy+16,1);
        for(var q = 0; q &lt; array_length_2d(item,i);q++) {
            draw_set_color(c_black);
            draw_set_alpha(.4);
            if(string_width(string(item[i, q])) &lt; 13 &amp;&amp; string(item[i, q]) != "0") {
                draw_rectangle(mouse_x,mouse_y+(q*16.5),mouse_x+13,mouse_y+(q+1)*16,0);
            } else if(string(item[i, q]) != "0")
                draw_rectangle(mouse_x,mouse_y+(q*16.5),mouse_x+string_width(string(item[i, q])),mouse_y+(q+1)*16,0);
            draw_set_alpha(1);
            draw_set_color(c_white);
            if(string(item[i, q]) != "0")
                draw_text(mouse_x,mouse_y+q*16,item[i,q]);
        }
    }
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Villager HUD
if(SELECTED_VILLAGER != -1) {
    for(i = 0; i &lt; array_length_1d(button);i++) {
        var xx = abs(mouse_x + view_xview[0]-buttonX[i]-32);
        var yy = abs(mouse_y + view_yview[0]-buttonY[i]-32);
        draw_set_alpha(0.5+0.5*overButton[i]);
        draw_sprite(hudWork, 0, view_xview[0]+buttonX[i],view_yview[i]+buttonY[i]);
        draw_set_color(c_black);
        draw_set_halign(fa_center);
        draw_text(view_xview[0]+buttonX[i]+32,view_yview[0]+buttonY[i]+70,button[i]);
        draw_set_alpha(1);
    }
}

if(selectingArea &amp;&amp; SELECTED_VILLAGER != -1) {
    draw_circle(mouse_x,mouse_y,SELECTED_VILLAGER.workArea[2],1);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw Villager Resources
if(SELECTED_VILLAGER != -1) {
    for(var b = 0; b &lt; array_height_2d(SELECTED_VILLAGER.carriedItems); b++) {
        for (var c = 0; c &lt; array_length_2d(SELECTED_VILLAGER.carriedItems, b); c++) {
            villagerItem[b, c] = SELECTED_VILLAGER.carriedItems[b,c];
        }
    }
} else {
    for(var b = 0; b &lt; array_height_2d(global.storage); b++) {
        for (var c = 0; c &lt; array_length_2d(global.storage, b); c++) {
            villagerItem[b, c] = 0;
        }
    }
}

if(SELECTED_VILLAGER != -1) 
{
    //Draw Resource Sprite and Quantity
    for(i = 0; i &lt; array_height_2d(villagerItem); i++) {
        var buffer = 24;
        var xpos = x1+i*40+32, ypos = y1+125+selected*200+buffer;
        draw_sprite(resSet,i,xpos,ypos);
        
        //Measure Total 
        var b, total = 0;
        draw_set_color(c_black);
        for(b = 0; b &lt; array_length_2d(villagerItem,i);b++) {
           total += villagerItem[i, b];
        }
        
        draw_text(xpos, ypos, total);
        var xx, yy;
        xx = xpos+16;
        yy = ypos+16;
        over_res[i] = (abs(mouse_x - xx) &lt; 16 &amp;&amp; abs(mouse_y - yy &lt; 16));
        if(over_res[i]) {
            draw_rectangle(xx-16,yy-16,xx+16,yy+16,1);
            for(var q = 0; q &lt; array_length_2d(villagerItem,i);q++) {
                draw_set_color(c_black);
                draw_set_alpha(.4);
                if(string_width(string(villagerItem[i, q])) &lt; 13 &amp;&amp; string(villagerItem[i, q]) != "0") {
                    draw_rectangle(mouse_x,mouse_y+(q*16.5),mouse_x+13,mouse_y+(q+1)*16,0);
                } else if(string(villagerItem[i, q]) != "0")
                    draw_rectangle(mouse_x,mouse_y+(q*16.5),mouse_x+string_width(string(villagerItem[i, q])),mouse_y+(q+1)*16,0);
                draw_set_alpha(1);
                draw_set_color(c_white);
                if(string(villagerItem[i, q]) != "0")
                    draw_text(mouse_x,mouse_y+q*16,villagerItem[i,q]);
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
